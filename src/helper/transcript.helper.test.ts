import { describe, expect, test } from "bun:test";
import { generateTranscriptParams } from "@/helper/transcript.helper";

function decodeB64Url(b64url: string): Uint8Array {
  const pad = (s: string) => s + "===".slice((s.length + 3) % 4);
  const b64 = pad(b64url).replace(/-/g, "+").replace(/_/g, "/");
  return Buffer.from(b64, "base64");
}

describe("generateTranscriptParams()", () => {
  test("generates stable base64url string and changes with inputs", () => {
    const a = generateTranscriptParams("dQw4w9WgXcQ", "en", false);
    const b = generateTranscriptParams("dQw4w9WgXcQ", "en", true);
    const c = generateTranscriptParams("dQw4w9WgXcQ", "id", false, "en");

    expect(typeof a).toBe("string");
    expect(a).not.toBe("");
    expect(b).not.toBe(a); // autoGenerated toggles payload
    expect(c).not.toBe(a);

    // Smoke-check that output is base64url decodable
    expect(() => decodeB64Url(a)).not.toThrow();
  });
});
